Wifi gpio experiments on the ASUS Tinkerboard.

The following 3 tests are included: ( see below for tests summary )
1. led test
2. i2c lcd test
3. servo

-------------------------------------------------------------------

To compile and flash to sd card:

cd ~/tinker-wifi
Download OS:
wget https://dlcdnets.asus.com/pub/ASUS/mb/Embedded_IPC/TinkerBoard_S/Tinker_Board-Debian-Stretch-V2.1.16-20200813.zip
unzip Tinker_Board-Debian-Stretch-V2.1.16-20200813.zip
Use balenaEtcher to burn img to sd card.
eject sd card.
Plugin sd card to PC.
cp rk3288.conf /media/$USER/4C89-2DED/extlinux/extlinux.conf
sync
sudo umount /media/$USER/4C89-2DED
eject sd card.
Plugin the sd card to ASUS Tinkerboard.
Connect Tinkerboard gpio Pin 8 to serial USB cable TX.
Connect Tinkerboard gpio pin 10 to serial USB cable RX. 
Connect Tinkerboard gpio pin 39 to serial USB cable ground. 
Type "script ~/outputfile.txt" on PC.
Plugin serial USB cable to PC.
Type "sudo screen /dev/ttyUSB0 115200" on PC.
Power on ASUS Tinkerboard.
It should prompt login message.
user linaro
password linaro
sudo dmesg -n 1
sudo vi /etc/rc.local ( add sudo dmesg -n 1 )
sudo tinker-config
set password, locale, timezone etc.
don't reboot
setup wifi:
nmcli dev wifi list
sudo nmcli con add con-name WiFi ifname wlan0 type wifi ssid mywifissid
sudo nmcli con modify WiFi wifi-sec.key-mgmt wpa-psk
sudo nmcli con modify WiFi wifi-sec.psk mypassword
sudo nmcli con up WiFi
date
sudo ifconfig
sudo shutdown -h now
Power off the ASUS Tinkerboard.
Unplug serial USB cable from PC.
Type "exit" on PC.
Power on ASUS Tinkerboard.
ssh linaro@192.168.86.xxx
vi nosleep.sh ( add following line to disable sleep feature )
sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
./nosleep.sh
date
sudo ifconfig
lsb_release -a
sudo apt-get update
sudo apt-get upgrade
sync
sudo reboot
sudo apt-get install python-dev python-pip python-setuptools python3-dev python3-pip python3-setuptools dnsutils apache2 vsftpd ftp git python-smbus i2c-tools
sudo cat /proc/device-tree/spi@ff130000/status  ( spi-2 )
sudo cat /proc/device-tree/pwm@ff680030/status  ( pwm-3 )
sudo cat /proc/device-tree/i2c@ff140000/status  ( i2c-1 )
sudo i2cdetect -y 1

Install python gpio library on ASUS Tinkerboard:
git clone https://github.com/TinkerBoard/gpio_lib_python.git
cd ~/gpio_lib_python
sudo python setup.py install

cd ~/
git clone https://github.com/TinkerBoard/gpio_lib_c.git
cd gpio_lib_c
chmod a+x build
sudo ./build
gpio -v
gpio readall

cd ~/
git clone https://github.com/chenphilip888/tinker-wifi.git
cd ~/tinker-wifi

-------------------------------------------------------------------------

Here are the summary of the tests: ( see tinker_gpio.png )

These tests used Seeed Grove starter kit LED, Grove-LCD RGB Backlight V3.0 JHD1313M2, Analog Servo.

Change HOST to your ASUS Tinkerboard for client_led.c, client_lcd.c, client_servo.c, client_led.py, client_lcd.py, client_servo.py.
chmod 755 *.py
On ASUS Tinkerboard, type "make server".
On PC, type "make client".

1. led test.
   This test will blink led 5 times. 
   Connect gpio pin 11 to led control. 
   Connect gpio pin 2 to led 5V. 
   Connect gpio pin 9 to led ground.
   On ASUS Tinkerboard, type "./server_led.py".
   On PC, type "./client_led.py".
   On ASUS Tinkerboard, type "./server_led".
   On PC, type "./client_led".

2. i2c lcd test.
   This test will change lcd backlight color for 5 cycles.
   Then it will display two sentences on lcd display.
   Connect gpio pin 3 to lcd display SDA.
   Connect gpio pin 5 to lcd display SCL.
   Connect gpio pin 2 to lcd display 5V.
   Connect gpio pin 9 to lcd display ground.
   On ASUS Tinkerboard, type "./server_lcd.py".
   On PC, type "./client_lcd.py".
   On ASUS Tinkerboard, type "./server_lcd".
   On PC, type "./client_lcd".

3. servo.
   This test will turn servo 90 degree - 180 degree - 90 degree - 0 degree etc.
   Connect gpio pin 32 to servo control.
   Connect gpio pin 2 to servo 5V.
   Connect gpio pin 9 to servo ground.
   On ASUS Tinkerboard, type "./server_servo.py".
   On PC, type "./client_servo.py".
   On ASUS Tinkerboard, type "./server_servo".
   On PC, type "./client_servo".

-----------------------------------------------------------------------------
